
loader.elf:     file format elf64-x86-64


Disassembly of section .text:

0000000000000100 <_ftext>:
_ftext():
 100:	e9 72 06 00 00       	jmpq   777 <LABEL_BEGIN+0x2>

0000000000000103 <LABEL_GDT>:
	...

000000000000010b <LABEL_DESC_CODE32>:
LABEL_DESC_CODE32():
 10b:	f4                   	hlt    
 10c:	01 00                	add    %eax,(%rax)
 10e:	00 00                	add    %al,(%rax)
 110:	98                   	cwtl   
 111:	40 00 8f 01 00 00 00 	add    %cl,0x1(%rdi)

0000000000000113 <LABEL_DESC_DATA>:
LABEL_DESC_DATA():
 113:	8f 01                	popq   (%rcx)
 115:	00 00                	add    %al,(%rax)
 117:	00 92 00 00 ff 01    	add    %dl,0x1ff0000(%rdx)

000000000000011b <LABEL_DESC_STACK>:
LABEL_DESC_STACK():
 11b:	ff 01                	incl   (%rcx)
 11d:	00 00                	add    %al,(%rax)
 11f:	00 93 40 00 ff ff    	add    %dl,-0xffc0(%rbx)

0000000000000123 <LABEL_DESC_VIDEO>:
LABEL_DESC_VIDEO():
 123:	ff                   	(bad)  
 124:	ff 00                	incl   (%rax)
 126:	80 0b f2             	orb    $0xf2,(%rbx)
	...

000000000000012b <LABEL_DESC_LDT>:
LABEL_DESC_LDT():
 12b:	07                   	(bad)  
 12c:	00 00                	add    %al,(%rax)
 12e:	00 00                	add    %al,(%rax)
 130:	82                   	(bad)  
	...

0000000000000133 <LABEL_DESC_CODECG>:
LABEL_DESC_CODECG():
 133:	13 00                	adc    (%rax),%eax
 135:	00 00                	add    %al,(%rax)
 137:	00 98 40 00 1b 00    	add    %bl,0x1b0040(%rax)

000000000000013b <LABEL_DESC_CODER3>:
LABEL_DESC_CODER3():
 13b:	1b 00                	sbb    (%rax),%eax
 13d:	00 00                	add    %al,(%rax)
 13f:	00 f8                	add    %bh,%al
 141:	40 00 ff             	add    %dil,%dil

0000000000000143 <LABEL_DESC_STACKR3>:
LABEL_DESC_STACKR3():
 143:	ff 01                	incl   (%rcx)
 145:	00 00                	add    %al,(%rax)
 147:	00 f3                	add    %dh,%bl
 149:	40 00 68 00          	add    %bpl,0x0(%rax)

000000000000014b <LABEL_DESC_TSS>:
LABEL_DESC_TSS():
 14b:	68 00 00 00 00       	pushq  $0x0
 150:	89 00                	mov    %eax,(%rax)
	...

0000000000000153 <LABEL_DESC_PAGEDIR>:
LABEL_DESC_PAGEDIR():
 153:	ff 0f                	decl   (%rdi)
 155:	00 00                	add    %al,(%rax)
 157:	20 92 00 00 ff 03    	and    %dl,0x3ff0000(%rdx)

000000000000015b <LABEL_DESC_PAGETBL>:
LABEL_DESC_PAGETBL():
 15b:	ff 03                	incl   (%rbx)
 15d:	00 10                	add    %dl,(%rax)
 15f:	20 92 80 00 00 00    	and    %dl,0x80(%rdx)

0000000000000163 <LABEL_CG_TEST>:
LABEL_CG_TEST():
 163:	00 00                	add    %al,(%rax)
 165:	30 00                	xor    %al,(%rax)
 167:	00 ec                	add    %ch,%ah
	...

000000000000016b <GdtPtr>:
GdtPtr():
 16b:	67 00 00             	add    %al,(%eax)
 16e:	00 00                	add    %al,(%rax)
	...

0000000000000171 <LABEL_LDT>:
LABEL_LDT():
 171:	26 00 00             	add    %al,%es:(%rax)
 174:	00 00                	add    %al,(%rax)
 176:	98                   	cwtl   
 177:	40 00 57 65          	add    %dl,0x65(%rdi)

0000000000000179 <LABEL_DATA>:
LABEL_DATA():
 179:	57                   	push   %rdi
 17a:	65                   	gs
 17b:	6c                   	insb   (%dx),%es:(%rdi)
 17c:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
 17f:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
 184:	70 72                	jo     1f8 <_ARDStruct+0x3>
 186:	6f                   	outsl  %ds:(%rsi),(%dx)
 187:	74 65                	je     1ee <_CursorPos+0x1>
 189:	63 74 20 6d          	movslq 0x6d(%rax,%riz,1),%esi
 18d:	6f                   	outsl  %ds:(%rsi),(%dx)
 18e:	64 65 21 00          	fs and %eax,%fs:%gs:(%rax)

0000000000000192 <_LDTMessage>:
_LDTMessage():
 192:	59                   	pop    %rcx
 193:	6f                   	outsl  %ds:(%rsi),(%dx)
 194:	75 20                	jne    1b6 <_ARDSTitle+0x7>
 196:	6a 75                	pushq  $0x75
 198:	6d                   	insl   (%dx),%es:(%rdi)
 199:	70 20                	jo     1bb <_ARDSTitle+0xc>
 19b:	69 6e 74 6f 20 61 20 	imul   $0x2061206f,0x74(%rsi),%ebp
 1a2:	4c                   	rex.WR
 1a3:	44 54                	rex.R push %rsp
 1a5:	20 73 65             	and    %dh,0x65(%rbx)
 1a8:	67 6d                	insl   (%dx),%es:(%edi)
 1aa:	65 6e                	outsb  %gs:(%rsi),(%dx)
 1ac:	74 21                	je     1cf <_ARDSTitle+0x20>
	...

00000000000001af <_ARDSTitle>:
_ARDSTitle():
 1af:	42 61                	rex.X (bad) 
 1b1:	73 65                	jae    218 <_AddrMapBuf+0xf>
 1b3:	41                   	rex.B
 1b4:	64                   	fs
 1b5:	64                   	fs
 1b6:	72 4c                	jb     204 <_LengthHigh+0x3>
 1b8:	20 42 61             	and    %al,0x61(%rdx)
 1bb:	73 65                	jae    222 <_AddrMapBuf+0x19>
 1bd:	41                   	rex.B
 1be:	64                   	fs
 1bf:	64                   	fs
 1c0:	72 48                	jb     20a <_AddrMapBuf+0x1>
 1c2:	20 4c 65 6e          	and    %cl,0x6e(%rbp,%riz,2)
 1c6:	67 74 68             	addr32 je 231 <_AddrMapBuf+0x28>
 1c9:	4c 6f                	rex.WR outsl %ds:(%rsi),(%dx)
 1cb:	20 20                	and    %ah,(%rax)
 1cd:	4c                   	rex.WR
 1ce:	65 6e                	outsb  %gs:(%rsi),(%dx)
 1d0:	67 74 68             	addr32 je 23b <_AddrMapBuf+0x32>
 1d3:	48 69 20 20 54 79 70 	imul   $0x70795420,(%rax),%rsp
 1da:	65 0a 00             	or     %gs:(%rax),%al

00000000000001dd <_RAMSizeMes>:
_RAMSizeMes():
 1dd:	52                   	push   %rdx
 1de:	41                   	rex.B
 1df:	4d 20 53 69          	rex.WRB and %r10b,0x69(%r11)
 1e3:	7a 65                	jp     24a <_AddrMapBuf+0x41>
 1e5:	3a 00                	cmp    (%rax),%al

00000000000001e7 <_LFMes>:
_LFMes():
 1e7:	0a 00                	or     (%rax),%al

00000000000001e9 <_AMECount>:
_AMECount():
 1e9:	00 00                	add    %al,(%rax)
	...

00000000000001ed <_CursorPos>:
_CursorPos():
 1ed:	40 01 00             	rex add %eax,(%rax)
	...

00000000000001f1 <_MemSize>:
_MemSize():
 1f1:	00 00                	add    %al,(%rax)
	...

00000000000001f5 <_ARDStruct>:
_ARDStruct():
 1f5:	00 00                	add    %al,(%rax)
	...

00000000000001f9 <_BaseAddrHigh>:
_BaseAddrHigh():
 1f9:	00 00                	add    %al,(%rax)
	...

00000000000001fd <_LengthLow>:
_LengthLow():
 1fd:	00 00                	add    %al,(%rax)
	...

0000000000000201 <_LengthHigh>:
_LengthHigh():
 201:	00 00                	add    %al,(%rax)
	...

0000000000000205 <_Type>:
_Type():
 205:	00 00                	add    %al,(%rax)
	...

0000000000000209 <_AddrMapBuf>:
	...
_AddrMapBuf():
 309:	0f 1f 00             	nopl   (%rax)

000000000000030c <LABEL_STACK>:
	...

000000000000050c <LABEL_STACKR3>:
	...

000000000000070c <LABEL_TSS>:
LABEL_TSS():
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	ff 01                	incl   (%rcx)
 712:	00 00                	add    %al,(%rax)
 714:	18 00                	sbb    %al,(%rax)
	...
 772:	68 00 ff 8c c8       	pushq  $0xffffffffc88cff00

0000000000000775 <LABEL_BEGIN>:
LABEL_BEGIN():
 775:	8c c8                	mov    %cs,%eax
 777:	8e d8                	mov    %eax,%ds
 779:	8e c0                	mov    %eax,%es
 77b:	8e d0                	mov    %eax,%ss
 77d:	bc 00 01 66 31       	mov    $0x31660100,%esp
 782:	db bf 09 02 66 b8    	fstpt  -0x4799fdf7(%rdi)

0000000000000786 <BEGIN.loop>:
BEGIN.loop():
 786:	66 b8 20 e8          	mov    $0xe820,%ax
 78a:	00 00                	add    %al,(%rax)
 78c:	66 b9 14 00          	mov    $0x14,%cx
 790:	00 00                	add    %al,(%rax)
 792:	66 ba 50 41          	mov    $0x4150,%dx
 796:	4d 53                	rex.WRB push %r11
 798:	cd 15                	int    $0x15
 79a:	72 10                	jb     7ac <BEGIN.getAMfail>
 79c:	83 c7 14             	add    $0x14,%edi
 79f:	66 ff 06             	incw   (%rsi)
 7a2:	e9 01 66 83 fb       	jmpq   fffffffffb836da8 <PageTblBase+0xfffffffffb635da8>
 7a7:	00 75 dc             	add    %dh,-0x24(%rbp)
 7aa:	eb 09                	jmp    7b5 <BEGIN.getAMok>

00000000000007ac <BEGIN.getAMfail>:
BEGIN.getAMfail():
 7ac:	66 c7 06 e9 01       	movw   $0x1e9,(%rsi)
 7b1:	00 00                	add    %al,(%rax)
	...

00000000000007b5 <BEGIN.getAMok>:
BEGIN.getAMok():
 7b5:	66 31 c0             	xor    %ax,%ax
 7b8:	8c c8                	mov    %cs,%eax
 7ba:	66 c1 e0 04          	shl    $0x4,%ax
 7be:	66 05 12 09          	add    $0x912,%ax
 7c2:	00 00                	add    %al,(%rax)
 7c4:	a3 0d 01 66 c1 e8 10 	movabs %eax,0xfa210e8c166010d
 7cb:	a2 0f 
 7cd:	01 88 26 12 01 66    	add    %ecx,0x66011226(%rax)
 7d3:	31 c0                	xor    %eax,%eax
 7d5:	8c c8                	mov    %cs,%eax
 7d7:	66 c1 e0 04          	shl    $0x4,%ax
 7db:	66 05 79 01          	add    $0x179,%ax
 7df:	00 00                	add    %al,(%rax)
 7e1:	a3 15 01 66 c1 e8 10 	movabs %eax,0x17a210e8c1660115
 7e8:	a2 17 
 7ea:	01 88 26 1a 01 66    	add    %ecx,0x66011a26(%rax)
 7f0:	31 c0                	xor    %eax,%eax
 7f2:	8c c8                	mov    %cs,%eax
 7f4:	66 c1 e0 04          	shl    $0x4,%ax
 7f8:	66 05 0c 03          	add    $0x30c,%ax
 7fc:	00 00                	add    %al,(%rax)
 7fe:	a3 1d 01 66 c1 e8 10 	movabs %eax,0x1fa210e8c166011d
 805:	a2 1f 
 807:	01 88 26 22 01 66    	add    %ecx,0x66012226(%rax)
 80d:	31 c0                	xor    %eax,%eax
 80f:	8c c8                	mov    %cs,%eax
 811:	66 c1 e0 04          	shl    $0x4,%ax
 815:	66 05 71 01          	add    $0x171,%ax
 819:	00 00                	add    %al,(%rax)
 81b:	a3 2d 01 66 c1 e8 10 	movabs %eax,0x2fa210e8c166012d
 822:	a2 2f 
 824:	01 88 26 32 01 66    	add    %ecx,0x66013226(%rax)
 82a:	31 c0                	xor    %eax,%eax
 82c:	8c c8                	mov    %cs,%eax
 82e:	66 c1 e0 04          	shl    $0x4,%ax
 832:	66 05 eb 08          	add    $0x8eb,%ax
 836:	00 00                	add    %al,(%rax)
 838:	a3 73 01 66 c1 e8 10 	movabs %eax,0x75a210e8c1660173
 83f:	a2 75 
 841:	01 88 26 78 01 66    	add    %ecx,0x66017826(%rax)
 847:	31 c0                	xor    %eax,%eax
 849:	8c c8                	mov    %cs,%eax
 84b:	66 c1 e0 04          	shl    $0x4,%ax
 84f:	66 05 07 0b          	add    $0xb07,%ax
 853:	00 00                	add    %al,(%rax)
 855:	a3 35 01 66 c1 e8 10 	movabs %eax,0x37a210e8c1660135
 85c:	a2 37 
 85e:	01 88 26 3a 01 66    	add    %ecx,0x66013a26(%rax)
 864:	31 c0                	xor    %eax,%eax
 866:	8c c8                	mov    %cs,%eax
 868:	66 c1 e0 04          	shl    $0x4,%ax
 86c:	66 05 0c 05          	add    $0x50c,%ax
 870:	00 00                	add    %al,(%rax)
 872:	a3 45 01 66 c1 e8 10 	movabs %eax,0x47a210e8c1660145
 879:	a2 47 
 87b:	01 88 26 4a 01 66    	add    %ecx,0x66014a26(%rax)
 881:	31 c0                	xor    %eax,%eax
 883:	8c c8                	mov    %cs,%eax
 885:	66 c1 e0 04          	shl    $0x4,%ax
 889:	66 05 1b 0b          	add    $0xb1b,%ax
 88d:	00 00                	add    %al,(%rax)
 88f:	a3 3d 01 66 c1 e8 10 	movabs %eax,0x3fa210e8c166013d
 896:	a2 3f 
 898:	01 88 26 42 01 66    	add    %ecx,0x66014226(%rax)
 89e:	31 c0                	xor    %eax,%eax
 8a0:	8c c8                	mov    %cs,%eax
 8a2:	66 c1 e0 04          	shl    $0x4,%ax
 8a6:	66 05 0c 07          	add    $0x70c,%ax
 8aa:	00 00                	add    %al,(%rax)
 8ac:	a3 4d 01 66 c1 e8 10 	movabs %eax,0x4fa210e8c166014d
 8b3:	a2 4f 
 8b5:	01 88 26 52 01 66    	add    %ecx,0x66015226(%rax)
 8bb:	31 c0                	xor    %eax,%eax
 8bd:	8c d8                	mov    %ds,%eax
 8bf:	66 c1 e0 04          	shl    $0x4,%ax
 8c3:	66 05 03 01          	add    $0x103,%ax
 8c7:	00 00                	add    %al,(%rax)
 8c9:	66 a3 6d 01 0f 01 16 	movabs %ax,0xfa016b16010f016d
 8d0:	6b 01 fa 
 8d3:	e4 92                	in     $0x92,%al
 8d5:	0c 02                	or     $0x2,%al
 8d7:	e6 92                	out    %al,$0x92
 8d9:	0f 20 c0             	mov    %cr0,%rax
 8dc:	66 83 c8 01          	or     $0x1,%ax
 8e0:	0f 22 c0             	mov    %rax,%cr0
 8e3:	66                   	data16
 8e4:	ea                   	(bad)  
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 00                	add    %al,(%rax)
 8e9:	08 00                	or     %al,(%rax)

00000000000008eb <LABEL_CODEA>:
LABEL_CODEA():
 8eb:	66 b8 20 00          	mov    $0x20,%ax
 8ef:	8e e8                	mov    %eax,%gs
 8f1:	b4 0c                	mov    $0xc,%ah
 8f3:	31 f6                	xor    %esi,%esi
 8f5:	31 ff                	xor    %edi,%edi
 8f7:	be 19 00 00 00       	mov    $0x19,%esi
 8fc:	bf 80 07 00 00       	mov    $0x780,%edi
 901:	fc                   	cld    

0000000000000902 <CODEA.1>:
CODEA.1():
 902:	ac                   	lods   %ds:(%rsi),%al
 903:	84 c0                	test   %al,%al
 905:	74 09                	je     910 <CODEA.2>
 907:	65 66 89 07          	mov    %ax,%gs:(%rdi)
 90b:	83 c7 02             	add    $0x2,%edi
 90e:	eb f2                	jmp    902 <CODEA.1>

0000000000000910 <CODEA.2>:
CODEA.2():
 910:	eb fe                	jmp    910 <CODEA.2>

0000000000000912 <LABEL_SEG_CODE32>:
LABEL_SEG_CODE32():
 912:	66 b8 10 00          	mov    $0x10,%ax
 916:	8e d8                	mov    %eax,%ds
 918:	66 b8 18 00          	mov    $0x18,%ax
 91c:	8e d0                	mov    %eax,%ss
 91e:	66 b8 20 00          	mov    $0x20,%ax
 922:	8e e8                	mov    %eax,%gs
 924:	bc ff 01 00 00       	mov    $0x1ff,%esp
 929:	6a 36                	pushq  $0x36
 92b:	e8 88 01 00 00       	callq  ab8 <DispStr>
 930:	83 c4 04             	add    $0x4,%esp
 933:	e8 89 00 00 00       	callq  9c1 <DispAddrMap>
 938:	6a 00                	pushq  $0x0
 93a:	e8 79 01 00 00       	callq  ab8 <DispStr>
 93f:	83 c4 04             	add    $0x4,%esp
 942:	66 b8 48 00          	mov    $0x48,%ax
 946:	0f 00 d8             	ltr    %ax
 949:	6a 43                	pushq  $0x43
 94b:	68 ff 01 00 00       	pushq  $0x1ff
 950:	6a 3b                	pushq  $0x3b
 952:	6a 00                	pushq  $0x0
 954:	cb                   	lret   

0000000000000955 <CODE32.3>:
CODE32.3():
 955:	66 b8 28 00          	mov    $0x28,%ax
 959:	0f 00 d0             	lldt   %ax
 95c:	ea                   	(bad)  
 95d:	00 00                	add    %al,(%rax)
 95f:	00 00                	add    %al,(%rax)
 961:	04 00                	add    $0x0,%al

0000000000000963 <SetupPaging>:
SetupPaging():
 963:	31 d2                	xor    %edx,%edx
 965:	a1 78 00 00 00 bb 00 	movabs 0x400000bb00000078,%eax
 96c:	00 40 
 96e:	00 f7                	add    %dh,%bh
 970:	f3 89 c1             	repz mov %eax,%ecx
 973:	85 d2                	test   %edx,%edx
 975:	74 01                	je     978 <SP.no_rem>
 977:	41 51                	push   %r9

0000000000000978 <SP.no_rem>:
SP.no_rem():
 978:	51                   	push   %rcx
 979:	66 b8 50 00          	mov    $0x50,%ax
 97d:	8e c0                	mov    %eax,%es
 97f:	31 ff                	xor    %edi,%edi
 981:	31 c0                	xor    %eax,%eax
 983:	b8 07 10 20 00       	mov    $0x201007,%eax

0000000000000988 <SP.1>:
SP.1():
 988:	ab                   	stos   %eax,%es:(%rdi)
 989:	05 00 10 00 00       	add    $0x1000,%eax
 98e:	e2 f8                	loop   988 <SP.1>
 990:	66 b8 58 00          	mov    $0x58,%ax
 994:	8e c0                	mov    %eax,%es
 996:	58                   	pop    %rax
 997:	c1 e0 0a             	shl    $0xa,%eax
 99a:	89 c1                	mov    %eax,%ecx
 99c:	31 ff                	xor    %edi,%edi
 99e:	31 c0                	xor    %eax,%eax
 9a0:	b8 07 00 00 00       	mov    $0x7,%eax

00000000000009a5 <SP.2>:
SP.2():
 9a5:	ab                   	stos   %eax,%es:(%rdi)
 9a6:	05 00 10 00 00       	add    $0x1000,%eax
 9ab:	e2 f8                	loop   9a5 <SP.2>
 9ad:	b8 00 00 20 00       	mov    $0x200000,%eax
 9b2:	0f 22 d8             	mov    %rax,%cr3
 9b5:	0f 20 c0             	mov    %cr0,%rax
 9b8:	0d 00 00 00 80       	or     $0x80000000,%eax
 9bd:	0f 22 c0             	mov    %rax,%cr0
 9c0:	c3                   	retq   

00000000000009c1 <DispAddrMap>:
DispAddrMap():
 9c1:	56                   	push   %rsi
 9c2:	57                   	push   %rdi
 9c3:	51                   	push   %rcx
 9c4:	be 90 00 00 00       	mov    $0x90,%esi
 9c9:	8b 0d 70 00 00 00    	mov    0x70(%rip),%ecx        # a3f <DispAL+0x6>

00000000000009cf <DMS.loop>:
DMS.loop():
 9cf:	ba 05 00 00 00       	mov    $0x5,%edx
 9d4:	bf 7c 00 00 00       	mov    $0x7c,%edi

00000000000009d9 <DMS.1>:
DMS.1():
 9d9:	ff 36                	pushq  (%rsi)
 9db:	e8 91 00 00 00       	callq  a71 <DispInt>
 9e0:	58                   	pop    %rax
 9e1:	ab                   	stos   %eax,%es:(%rdi)
 9e2:	83 c6 04             	add    $0x4,%esi
 9e5:	4a 83 fa 00          	rex.WX cmp $0x0,%rdx
 9e9:	75 ee                	jne    9d9 <DMS.1>
 9eb:	e8 0c 01 00 00       	callq  afc <DispLF>
 9f0:	83 3d 8c 00 00 00 01 	cmpl   $0x1,0x8c(%rip)        # a83 <DispInt+0x12>
 9f7:	75 18                	jne    a11 <DMS.2>
 9f9:	a1 7c 00 00 00 03 05 	movabs 0x8405030000007c,%eax
 a00:	84 00 
 a02:	00 00                	add    %al,(%rax)
 a04:	3b 05 78 00 00 00    	cmp    0x78(%rip),%eax        # a82 <DispInt+0x11>
 a0a:	72 05                	jb     a11 <DMS.2>
 a0c:	a3 78 00 00 00 e2 bc 	movabs %eax,0xe4e8bce200000078
 a13:	e8 e4 

0000000000000a11 <DMS.2>:
DMS.2():
 a11:	e2 bc                	loop   9cf <DMS.loop>
 a13:	e8 e4 00 00 00       	callq  afc <DispLF>
 a18:	6a 64                	pushq  $0x64
 a1a:	e8 99 00 00 00       	callq  ab8 <DispStr>
 a1f:	83 c4 04             	add    $0x4,%esp
 a22:	ff 35 78 00 00 00    	pushq  0x78(%rip)        # aa0 <DispInt+0x2f>
 a28:	e8 44 00 00 00       	callq  a71 <DispInt>
 a2d:	83 c4 04             	add    $0x4,%esp
 a30:	e8 c7 00 00 00       	callq  afc <DispLF>
 a35:	59                   	pop    %rcx
 a36:	5f                   	pop    %rdi
 a37:	5e                   	pop    %rsi
 a38:	c3                   	retq   

0000000000000a39 <DispAL>:
DispAL():
 a39:	51                   	push   %rcx
 a3a:	52                   	push   %rdx
 a3b:	57                   	push   %rdi
 a3c:	8b 3d 74 00 00 00    	mov    0x74(%rip),%edi        # ab6 <DispInt+0x45>
 a42:	b4 0f                	mov    $0xf,%ah
 a44:	88 c2                	mov    %al,%dl
 a46:	c0 e8 04             	shr    $0x4,%al
 a49:	b9 02 00 00 00       	mov    $0x2,%ecx

0000000000000a4e <DispAL.begin>:
DispAL.begin():
 a4e:	24 0f                	and    $0xf,%al
 a50:	3c 09                	cmp    $0x9,%al
 a52:	77 04                	ja     a58 <DispAL.1>
 a54:	04 30                	add    $0x30,%al
 a56:	eb 04                	jmp    a5c <DispAL.2>

0000000000000a58 <DispAL.1>:
DispAL.1():
 a58:	2c 0a                	sub    $0xa,%al
 a5a:	04 41                	add    $0x41,%al

0000000000000a5c <DispAL.2>:
DispAL.2():
 a5c:	65 66 89 07          	mov    %ax,%gs:(%rdi)
 a60:	83 c7 02             	add    $0x2,%edi
 a63:	88 d0                	mov    %dl,%al
 a65:	e2 e7                	loop   a4e <DispAL.begin>
 a67:	89 3d 74 00 00 00    	mov    %edi,0x74(%rip)        # ae1 <DispStr.1+0x18>
 a6d:	5f                   	pop    %rdi
 a6e:	5a                   	pop    %rdx
 a6f:	59                   	pop    %rcx
 a70:	c3                   	retq   

0000000000000a71 <DispInt>:
DispInt():
 a71:	8b 44 24 04          	mov    0x4(%rsp),%eax
 a75:	c1 e8 18             	shr    $0x18,%eax
 a78:	e8 bc ff ff ff       	callq  a39 <DispAL>
 a7d:	8b 44 24 04          	mov    0x4(%rsp),%eax
 a81:	c1 e8 10             	shr    $0x10,%eax
 a84:	e8 b0 ff ff ff       	callq  a39 <DispAL>
 a89:	8b 44 24 04          	mov    0x4(%rsp),%eax
 a8d:	c1 e8 08             	shr    $0x8,%eax
 a90:	e8 a4 ff ff ff       	callq  a39 <DispAL>
 a95:	8b 44 24 04          	mov    0x4(%rsp),%eax
 a99:	e8 9b ff ff ff       	callq  a39 <DispAL>
 a9e:	b4 07                	mov    $0x7,%ah
 aa0:	b0 68                	mov    $0x68,%al
 aa2:	57                   	push   %rdi
 aa3:	8b 3d 74 00 00 00    	mov    0x74(%rip),%edi        # b1d <LABEL_SEG_CODER3+0x2>
 aa9:	65 66 89 07          	mov    %ax,%gs:(%rdi)
 aad:	83 c7 04             	add    $0x4,%edi
 ab0:	89 3d 74 00 00 00    	mov    %edi,0x74(%rip)        # b2a <LABEL_SEG_CODER3+0xf>
 ab6:	5f                   	pop    %rdi
 ab7:	c3                   	retq   

0000000000000ab8 <DispStr>:
DispStr():
 ab8:	55                   	push   %rbp
 ab9:	89 e5                	mov    %esp,%ebp
 abb:	53                   	push   %rbx
 abc:	56                   	push   %rsi
 abd:	57                   	push   %rdi
 abe:	8b 75 08             	mov    0x8(%rbp),%esi
 ac1:	8b 3d 74 00 00 00    	mov    0x74(%rip),%edi        # b3b <LABEL_SEG_CODER3+0x20>
 ac7:	b4 0f                	mov    $0xf,%ah

0000000000000ac9 <DispStr.1>:
DispStr.1():
 ac9:	ac                   	lods   %ds:(%rsi),%al
 aca:	84 c0                	test   %al,%al
 acc:	74 23                	je     af1 <DispStr.2>
 ace:	3c 0a                	cmp    $0xa,%al
 ad0:	75 16                	jne    ae8 <DispStr.3>
 ad2:	50                   	push   %rax
 ad3:	89 f8                	mov    %edi,%eax
 ad5:	b3 a0                	mov    $0xa0,%bl
 ad7:	f6 f3                	div    %bl
 ad9:	25 ff 00 00 00       	and    $0xff,%eax
 ade:	40 b3 a0             	mov    $0xa0,%bl
 ae1:	f6 e3                	mul    %bl
 ae3:	89 c7                	mov    %eax,%edi
 ae5:	58                   	pop    %rax
 ae6:	eb e1                	jmp    ac9 <DispStr.1>

0000000000000ae8 <DispStr.3>:
DispStr.3():
 ae8:	65 66 89 07          	mov    %ax,%gs:(%rdi)
 aec:	83 c7 02             	add    $0x2,%edi
 aef:	eb d8                	jmp    ac9 <DispStr.1>

0000000000000af1 <DispStr.2>:
DispStr.2():
 af1:	89 3d 74 00 00 00    	mov    %edi,0x74(%rip)        # b6b <LABEL_SEG_CODER3+0x50>
 af7:	5f                   	pop    %rdi
 af8:	5e                   	pop    %rsi
 af9:	5b                   	pop    %rbx
 afa:	5d                   	pop    %rbp
 afb:	c3                   	retq   

0000000000000afc <DispLF>:
DispLF():
 afc:	6a 6e                	pushq  $0x6e
 afe:	e8 b5 ff ff ff       	callq  ab8 <DispStr>
 b03:	83 c4 04             	add    $0x4,%esp
 b06:	c3                   	retq   

0000000000000b07 <LABEL_SEG_CODECG>:
LABEL_SEG_CODECG():
 b07:	66 b8 20 00          	mov    $0x20,%ax
 b0b:	8e e8                	mov    %eax,%gs
 b0d:	bf 80 07 00 00       	mov    $0x780,%edi
 b12:	b4 0c                	mov    $0xc,%ah
 b14:	b0 43                	mov    $0x43,%al
 b16:	65 66 89 07          	mov    %ax,%gs:(%rdi)
 b1a:	cb                   	lret   

0000000000000b1b <LABEL_SEG_CODER3>:
LABEL_SEG_CODER3():
 b1b:	66 b8 20 00          	mov    $0x20,%ax
 b1f:	8e e8                	mov    %eax,%gs
 b21:	bf 82 07 00 00       	mov    $0x782,%edi
 b26:	b4 0c                	mov    $0xc,%ah
 b28:	b0 33                	mov    $0x33,%al
 b2a:	65 66 89 07          	mov    %ax,%gs:(%rdi)
 b2e:	9a                   	(bad)  
 b2f:	00 00                	add    %al,(%rax)
 b31:	00 00                	add    %al,(%rax)
 b33:	60                   	(bad)  
 b34:	00 eb                	add    %ch,%bl
 b36:	fe                   	.byte 0xfe
